{"version":3,"sources":["index.js"],"names":["Box","selectBox","props","row","col","className","this","boxClass","id","onClick","data-alive","cycle","React","Component","Buttons","playButton","pauseButton","seed","clear","slow","fast","placeholder","onInput","changeDieMin","changeDieMax","changeAlive","Grid","width","cols","rowsArray","i","rows","j","boxId","boxCycle","generationCycle","gridFull","push","key","style","App","gridCopy","arrayClone","state","cycleCopy","setState","clearInterval","intervalId","setInterval","play","speed","evt","dieMin","target","value","dieMax","alive","grid","Array","fill","cycleClone","generation","randomNumber","Math","floor","random","gridClone","count","gridSize","arr","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a826812.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Box extends React.Component {\n    selectBox = () => {\n        this.props.selectBox(this.props.row, this.props.col)\n    }\n\n    render() {\n        return (\n            <div\n                className={this.props.boxClass}\n                id={this.props.id}\n                onClick={this.selectBox}\n                data-alive={this.props.cycle}\n            />\n        )\n    }\n}\n\nclass Buttons extends React.Component {\n    render() {\n        return (\n            <div className='buttons'>\n                <div>\n                    <button className=\"btn\" onClick={this.props.playButton}>Play</button>\n                    <button className=\"btn\" onClick={this.props.pauseButton}>Pause</button>\n                </div>\n                <div>\n                    <button className=\"btn\" onClick={this.props.seed}>Seed</button>\n                    <button className=\"btn\" onClick={this.props.clear}>Clear</button>\n                </div>\n                <div>\n                    <button className=\"btn\" onClick={this.props.slow}>Slow</button>\n                    <button className=\"btn\" onClick={this.props.fast}>Fast</button>\n                </div>\n                <p>\n                    <span>Die if less than</span>\n                    <input placeholder=\"2\" onInput={this.props.changeDieMin}/>\n                </p>\n                <p>\n                    <span>Die if more than</span>\n                    <input placeholder=\"3\" onInput={this.props.changeDieMax}/>\n                </p>\n                <p>\n                    <span>Alive if exactly</span>\n                    <input placeholder=\"3\" onInput={this.props.changeAlive}/>\n                </p>\n            </div>\n        )\n    }\n}\n\nclass Grid extends React.Component {\n    render() {\n        const width = this.props.cols * 9;\n        let rowsArray = [];\n        let boxClass = \"\";\n\n        for (let i = 0; i < this.props.rows; i++) {\n            for (let j = 0; j < this.props.rows; j++) {\n                let boxId = i + \"_\" + j;\n                let boxCycle = this.props.generationCycle[i][j];\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n                rowsArray.push(\n                    <Box\n                        boxClass={boxClass}\n                        key={boxId}\n                        boxId={boxId}\n                        row={i}\n                        col={j}\n                        selectBox={this.props.selectBox}\n                        cycle={boxCycle}\n                    />\n                )\n            }\n        }\n\n        return(\n            <div className=\"grid\" style={{width: width}}>\n                {rowsArray}\n            </div>\n        )\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.speed = 100;\n        this.rows = 60;\n        this.cols = 60;\n        this.state = {\n            generation: 0,\n            gridFull: Array(this.rows).fill(Array(this.cols).fill(false)),\n            generationCycle: Array(this.rows).fill(Array(this.cols).fill(0)),\n            dieMin: 2,\n            dieMax: 3,\n            alive: 2,\n        }\n    }\n\n    selectBox = (row, col) => {\n        let gridCopy = arrayClone(this.state.gridFull);\n        let cycleCopy = arrayClone(this.state.generationCycle);\n        gridCopy[row][col] = !gridCopy[row][col];\n        cycleCopy[row][col] === 0 ? cycleCopy[row][col] = 1 : cycleCopy[row][col] = 0;\n        this.setState({\n            gridFull: gridCopy,\n            generationCycle: cycleCopy,\n        })\n    }\n\n    playButton = () => {\n        clearInterval(this.intervalId);\n        this.intervalId = setInterval(this.play, this.speed);\n    }\n\n    pauseButton = () => {\n        clearInterval(this.intervalId);\n    }\n\n    changeDieMin = (evt) => {\n        this.setState({\n            dieMin: evt.target.value,\n        })\n    }\n\n    changeDieMax = (evt) => {\n        this.setState({\n            dieMax: evt.target.value,\n        })\n    }\n\n    changeAlive = (evt) => {\n        this.setState({\n            alive: evt.target.value,\n        })\n    }\n\n    slow = () => {\n        this.speed = 1000;\n        this.playButton();\n    }\n\n    fast = () => {\n        this.speed = 100;\n        this.playButton();\n    }\n\n    clear = () => {\n        this.pauseButton();\n        let grid = Array(this.rows).fill(Array(this.cols).fill(false));\n        let cycleClone = Array(this.rows).fill(Array(this.cols).fill(0));\n        this.setState({\n            gridFull: grid,\n            generation: 0,\n            generationCycle: cycleClone,\n        })\n    }\n\n    seed = () => {\n        this.clear();\n        let gridCopy = arrayClone(this.state.gridFull);\n        let cycleClone = arrayClone(this.state.generationCycle);\n\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.rows; j++) {\n                let randomNumber = Math.floor(Math.random() * 4);\n                randomNumber === 1 ? gridCopy[i][j] = true : gridCopy[i][j] = false;\n                randomNumber === 1 ? cycleClone[i][j] = 1 : cycleClone[i][j] = 0;\n            }\n        }\n\n        this.setState({\n            gridFull: gridCopy,\n            generationCycle: cycleClone,\n        })\n    }\n\n    play = () => {\n        let grid = this.state.gridFull;\n        let gridClone = arrayClone(this.state.gridFull);\n        let cycleClone = arrayClone(this.state.generationCycle);\n\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                let count = 0;\n                if (i > 0) if (grid[i - 1]) count++;\n                if (i > 0 && j > 0) if (grid[i - 1][j-1]) count++;\n                if (i > 0 && j < this.cols - 1) if (grid[i - 1][j + 1]) count++;\n                if (j < this.cols - 1) if (grid[i][j+1]) count++;\n                if (j > 0) if (grid[i][j-1]) count++;\n                if (i < this.rows - 1) if (grid[i+1][j]) count++;\n                if (i < this.rows - 1 && j > 0) if (grid[i+1][j-1]) count++;\n                if (i < this.rows - 1 && this.cols - 1) if (grid[i+1][j+1]) count++;\n                if (grid[i][j] && (count < this.state.dieMin || count > this.state.dieMax)) {\n                    gridClone[i][j] = false;\n                }\n                if (!grid[i][j] && count === this.state.alive) {\n                    gridClone[i][j] = true;\n                    cycleClone[i][j]++\n                }\n            }\n        }\n\n        this.setState({\n            gridFull: gridClone,\n            generation: this.state.generation + 1,\n            generationCycle: cycleClone,\n        })\n    }\n\n    componentDidMount() {\n        this.seed();\n    }\n\n    render() {\n        return (\n            <div className='col-wrapper'>\n                <div className=\"col\">\n                    <h1>The Game of Life</h1>\n                    <Buttons\n                        playButton={this.playButton}\n                        pauseButton={this.pauseButton}\n                        slow={this.slow}\n                        fast={this.fast}\n                        clear={this.clear}\n                        seed={this.seed}\n                        gridSize={this.gridSize}\n                        changeDieMin={this.changeDieMin}\n                        changeDieMax={this.changeDieMax}\n                        changeAlive={this.changeAlive}\n                    />\n                    <h2>Generations: {this.state.generation}</h2>\n                </div>\n\n                <div className=\"col\">\n                    <Grid\n                        gridFull = {this.state.gridFull}\n                        rows = {this.rows}\n                        cols = {this.cols}\n                        selectBox = {this.selectBox}\n                        generationCycle = {this.state.generationCycle}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction arrayClone(arr) {\n    return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}